import pepe.*

describe "Sueldo Pepe" {
	
	test "Pepe cadete, bono monto fijo, presentismo normal: Falta 3 días, cobra $20800." {
		pepe.categoria(cadete)
		pepe.tipoDeBono(montoFijo)
		pepe.bonoPorPresentismo(normal)
		pepe.ausencias(3)
		assert.equals(20800, pepe.sueldo())
	}
	
	test "Pepe gerente, bono porcentaje, presentismo nulo: Cobra 16500"{
		pepe.categoria(gerente)
		pepe.tipoDeBono(porcentaje)
		pepe.bonoPorPresentismo(presentismoNulo)
		assert.equals(16500, pepe.sueldo())
	}
	
	test "Pepe cadete, bono porcentaje, presentismo normal, sin faltas: Cobra 24000"{
		pepe.categoria(cadete)
		pepe.tipoDeBono(porcentaje)
		pepe.bonoPorPresentismo(normal)
		pepe.ausencias(0)
		assert.equals(24000, pepe.sueldo())
	}
	
	test "Pepe cadete, bono porcentaje, presentismo normal, una falta: Cobra 23000"{
		pepe.categoria(cadete)
		pepe.tipoDeBono(porcentaje)
		pepe.bonoPorPresentismo(normal)
		pepe.ausencias(1)
		assert.equals(23000, pepe.sueldo())
	}
	
	test "Pepe cadete, medio tiempo, bono porcentaje, presentismo demagógico, una falta. Roque bono montofijo. Ernesto compañero de Ernesto, presentismo por ajuste."{
		pepe.categoria(medioTiempo)
		medioTiempo.categoriaBase(cadete)
		pepe.tipoDeBono(porcentaje)
		pepe.bonoPorPresentismo(demagogico)
		pepe.ausencias(1)
		assert.equals(11500, pepe.sueldo())
		roque.tipoDeBono(montoFijo)
		assert.equals(37800, roque.sueldo())
		ernesto.companhero(pepe)
		ernesto.bonoPorPresentismo(ajuste)
		assert.equals(10100, ernesto.sueldo())
	}
	
	/*DUDA
	 * El ejercicio pide realizar UN TEST con estas características. 
	 * ¿Está bien o es mejor dividirlo en partes?
	 */
	
	/*test "Roque bono monto fijo"{
		roque.tipoDeBono(montoFijo)
		assert.equals(37800, roque.sueldo())
	}
	
	test "Ernesto compañero de pepe, presentismo por ajuste"{
		ernesto.companhero(pepe)
		ernesto.bonoPorPresentismo(ajuste)
		assert.equals(10100, ernesto.sueldo())
	}*/
}